@using Newtonsoft.Json
@model IEnumerable<MDashboard.Models.Widget>

<style>
    .card {
        height: 100%;
        max-height: 500px;
        display: flex;
        flex-direction: column;
    }

    .card-body {
        flex: 1;
        display: flex;
        flex-direction: column;
        overflow: hidden;
        position: relative;
    }

    .scrollable-content {
        flex: 1;
        overflow-y: auto;
        padding-bottom: 60px; /* Espacio para el botón */
    }

    .sticky-button-container {
        position: sticky;
        bottom: 0;
        background: white;
        padding: 1rem 0;
        border-top: 1px solid #dee2e6;
        margin-top: auto;
        z-index: 1;
    }

    .nasa-widget img,
    .nasa-widget iframe {
        max-height: 200px;
        object-fit: cover;
    }

    .rick-carousel {
        position: relative;
        overflow: hidden;
        padding: 1rem 0;
    }

    .rick-slider {
        display: flex;
        transition: transform 0.5s ease-in-out;
        gap: 1rem;
        padding-bottom: 1rem;
    }

    .rick-card {
        min-width: 100%;
        flex: 0 0 auto;
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        overflow: hidden;
    }

        .rick-card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-bottom: 2px solid #00b5cc;
        }

    .rick-card-body {
        padding: 1rem;
        background: #1a1a1a;
        color: white;
    }

    .rick-nav-button {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background: rgba(0,181,204,0.8);
        color: white;
        border: none;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        z-index: 10;
        cursor: pointer;
        transition: all 0.3s;
    }

        .rick-nav-button:hover {
            background: #00b5cc;
        }

    .rick-prev {
        left: 10px;
    }

    .rick-next {
        right: 10px;
    }

    .rick-indicators {
        position: absolute;
        bottom: 10px;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        gap: 5px;
        z-index: 10;
    }

    .rick-indicator {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: rgba(255,255,255,0.5);
        cursor: pointer;
        transition: all 0.3s;
    }

        .rick-indicator.active {
            background: #00b5cc;
            transform: scale(1.2);
        }

    #apiContainer {
        display: flex;
        flex-direction: column;
        max-height: 400px; /* Ajusta según el espacio disponible */
        overflow-y: auto;
        gap: 10px; /* Espaciado entre APIs */
    }

</style>

<div class="container mt-4">
    <h2>Dashboard</h2>

    <!-- Dropdown para controlar la visibilidad de widgets -->
    <div class="dropdown mb-3">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="widgetVisibilityDropdown" data-bs-toggle="dropdown" aria-expanded="false">
            Mostrar/Ocultar Widgets
        </button>
        <ul class="dropdown-menu" aria-labelledby="widgetVisibilityDropdown" id="widgetVisibilityMenu">
            @foreach (var widget in Model)
            {
                <li>
                    <div class="form-check dropdown-item">
                        <input class="form-check-input widget-visibility" type="checkbox"
                               value="@widget.Id" id="widget-@widget.Id"
                               data-widget-id="@widget.Id" checked>
                        <label class="form-check-label" for="widget-@widget.Id">
                            @widget.Nombre
                        </label>
                    </div>
                </li>
            }
        </ul>
    </div>

    <div class="row row-cols-1 row-cols-md-3 g-4" id="widgetsContainer">
        @foreach (var widget in Model)
        {
            <div class="col mb-4 widget-item" data-widget-id="@widget.Id">
                <div class="card h-100 shadow-sm">
                    <div class="card-body d-flex flex-column">
                        <div class="scrollable-content">
                            <h5 class="card-title">@widget.Nombre</h5>
                            <p class="card-text">@widget.Descripcion</p>

                            @if (ViewBag.DynamicData != null && ViewBag.DynamicData.ContainsKey(widget.Nombre))
                            {
                                var dynamicData = ViewBag.DynamicData[widget.Nombre];

                                if (widget.UrlApi.Contains("openweathermap.org"))
                                {
                                    <!-- Widget de Clima -->
                                    <div class="weather-widget mt-auto">
                                        <div class="d-flex align-items-center mb-2">
                                            <i class="fas fa-cloud-sun fs-3 me-2"></i>
                                            <span class="fs-5 fw-bold">Condiciones Actuales</span>
                                        </div>
                                        <ul class="list-unstyled">
                                            <li class="py-1">
                                                <i class="fas fa-temperature-high me-2"></i>
                                                <strong>Temperatura:</strong> @dynamicData.Temp °C
                                            </li>
                                            <li class="py-1">
                                                <i class="fas fa-tint me-2"></i>
                                                <strong>Humedad:</strong> @dynamicData.Humidity %
                                            </li>
                                            <li class="py-1">
                                                <i class="fas fa-tachometer-alt me-2"></i>
                                                <strong>Presión:</strong> @dynamicData.Pressure hPa
                                            </li>
                                        </ul>
                                    </div>
                                }
                                else if (widget.UrlApi.Contains("exchangerate-api.com"))
                                {
                                    <!-- Widget de Tipo de Cambio -->
                                    <div class="exchange-widget mt-auto">
                                        <div class="d-flex align-items-center mb-2">
                                            <i class="fas fa-money-bill-wave fs-3 me-2"></i>
                                            <span class="fs-5 fw-bold">Tasas de Cambio</span>
                                        </div>
                                        <p class="text-muted small mb-3">
                                            <i class="fas fa-sync-alt me-1"></i>
                                            Actualizado: @dynamicData.LastUpdate
                                        </p>

                                        <div class="exchange-rates-grid mb-3">
                                            @foreach (var rate in dynamicData.FeaturedRates)
                                            {
                                                <div class="rate-item">
                                                    <span class="currency-flag me-2" data-currency="@rate.Key"></span>
                                                    <strong>@rate.Key:</strong>
                                                    <span class="rate-value">@rate.Value.ToString("0.0000")</span>
                                                </div>
                                            }
                                        </div>

                                        <button class="btn btn-sm btn-outline-primary w-100 mt-2"
                                                type="button"
                                                data-bs-toggle="collapse"
                                                data-bs-target="#allRates-@widget.Id">
                                            <i class="fas fa-list me-1"></i> Ver todas las tasas
                                        </button>

                                        <div class="collapse mt-3" id="allRates-@widget.Id">
                                            <div class="all-rates-container">
                                                @foreach (var rate in dynamicData.AllRates)
                                                {
                                                    <div class="rate-item small">
                                                        <span class="currency-flag me-2" data-currency="@rate.Key"></span>
                                                        <strong>@rate.Key:</strong>
                                                        <span class="rate-value">@rate.Value.ToString("0.0000")</span>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                                else if (widget.UrlApi.Contains("api.nasa.gov"))
                                {
                                    <!-- Widget NASA -->
                                    <div class="nasa-widget mt-auto">
                                        <h5 class="card-title">NASA APOD</h5>
                                        @if (ViewBag.DynamicData[widget.Nombre] != null)
                                        {
                                            var nasaData = ViewBag.DynamicData[widget.Nombre];

                                            <p class="text-muted">Fecha: @nasaData.Date</p>
                                            <h6>@nasaData.Title</h6>
                                            <p>@nasaData.Explanation</p>

                                            @if (nasaData.MediaType == "image")
                                            {
                                                <img src="@nasaData.Url" alt="Imagen APOD" class="img-fluid rounded shadow-sm" />
                                            }
                                            else if (nasaData.MediaType == "video")
                                            {
                                                <div class="ratio ratio-16x9">
                                                    <iframe src="@nasaData.Url" frameborder="0" allowfullscreen></iframe>
                                                </div>
                                            }
                                            else
                                            {
                                                <p class="text-danger">Tipo de contenido no compatible.</p>
                                            }
                                        }
                                        else
                                        {
                                            <div class="alert alert-warning">
                                                <i class="fas fa-exclamation-triangle me-2"></i>
                                                No hay datos disponibles para el widget de NASA.
                                            </div>
                                        }
                                    </div>
                                }
                                else if (widget.UrlApi.Contains("rickandmortyapi"))
                                {
                                    var rickData = ViewBag.DynamicData[widget.Nombre] as List<MDashboard.Models.ApiModels.Character>;

                                    <!-- Widget Rick and Morty -->
                                    <div class="rick-widget mt-auto">
                                        <h5 class="card-title text-center mb-3">Personajes de Rick and Morty</h5>
                                        <div class="rick-carousel">
                                            <button class="rick-nav-button rick-prev">❮</button>
                                            <button class="rick-nav-button rick-next">❯</button>
                                            <div class="rick-slider">
                                                @foreach (var character in rickData)
                                                {
                                                    <div class="rick-card">
                                                        <img src="@character.Image" alt="@character.Name">
                                                        <div class="rick-card-body">
                                                            <h6 class="mb-2">@character.Name</h6>
                                                            <div class="small">
                                                                <div class="d-flex justify-content-between">
                                                                    <span>Especie:</span>
                                                                    <strong>@character.Species</strong>
                                                                </div>
                                                                <div class="d-flex justify-content-between">
                                                                    <span>Género:</span>
                                                                    <strong>@character.Gender</strong>
                                                                </div>
                                                                <div class="d-flex justify-content-between">
                                                                    <span>Estado:</span>
                                                                    <strong>@character.Status</strong>
                                                                </div>
                                                                <div class="d-flex justify-content-between">
                                                                    <span>Origen:</span>
                                                                    <strong>@character.Origin?.Name</strong>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                            <div class="rick-indicators"></div>
                                        </div>
                                    </div>
                                }

                                

                                else
                                {
                                    <!-- Widget genérico -->
                                    <div class="generic-widget mt-auto">
                                        <pre class="p-2 bg-light rounded">@JsonConvert.SerializeObject(dynamicData, Formatting.Indented)</pre>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="alert alert-warning mt-auto">
                                    <i class="fas fa-exclamation-triangle me-2"></i>
                                    No hay datos disponibles
                                </div>
                            }
                        </div>

                        <!-- Botón fijo -->
                        <div class="sticky-button-container">
                            <form method="post" action="@Url.Action("AgregarWidget", "Dashboard")">
                                <input type="hidden" name="widgetId" value="@widget.Id" />
                                <button type="submit" class="btn btn-primary btn-sm w-100">
                                    <i class="fas fa-plus me-1"></i> Agregar al Dashboard
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Inicializar carrusel de Rick
            $('.rick-carousel').each(function() {
                const carousel = $(this);
                const slider = carousel.find('.rick-slider');
                const cards = slider.children();
                const indicatorsContainer = carousel.find('.rick-indicators');
                let currentIndex = 0;

                // Crear indicadores
                cards.each((index) => {
                    indicatorsContainer.append(
                        `<div class="rick-indicator ${index === 0 ? 'active' : ''}"></div>`
                    );
                });

                // Actualizar indicadores
                const updateIndicators = () => {
                    indicatorsContainer.find('.rick-indicator')
                        .removeClass('active')
                        .eq(currentIndex).addClass('active');
                };

                // Navegación
                carousel.find('.rick-prev').click(() => {
                    if (currentIndex > 0) {
                        currentIndex--;
                        slider.css('transform', `translateX(-${currentIndex * 100}%)`);
                        updateIndicators();
                    }
                });

                carousel.find('.rick-next').click(() => {
                    if (currentIndex < cards.length - 1) {
                        currentIndex++;
                        slider.css('transform', `translateX(-${currentIndex * 100}%)`);
                        updateIndicators();
                    }
                });

                // Indicadores click
                indicatorsContainer.on('click', '.rick-indicator', function() {
                    currentIndex = $(this).index();
                    slider.css('transform', `translateX(-${currentIndex * 100}%)`);
                    updateIndicators();
                });
            });
        });


    </script>
}