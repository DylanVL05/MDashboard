@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@model IEnumerable<MDashboard.Models.Widget>

<link href="~/css/indexdashboard.css" rel="stylesheet" />



@{
    var configuraciones = ViewBag.Configuraciones as Dictionary<int, MDashboard.Models.ConfiguracionWidget>
                          ?? new Dictionary<int, MDashboard.Models.ConfiguracionWidget>();
}

<div class="container mt-4">
    <h2 style="color: white">Dashboard</h2>
    <div class="mb-4">
        <div class="d-flex flex-wrap gap-3" id="widgetsContainer">
            @foreach (var widget in Model)
            {
                MDashboard.Models.ConfiguracionWidget config = null;
                if (configuraciones != null && configuraciones.ContainsKey(widget.Id))
                {
                    config = configuraciones[widget.Id];
                }

                int height = config?.Height ?? 400;
                int width = config?.Width ?? 400;
                <div class="widget-item" data-widget-id="@widget.Id" id="widget-@widget.Id">
                    <div class="card h-100 shadow-sm position-relative"
                         style="width: @(width)px; height: @(height)px;"
                         data-saved-width="@width"
                         data-saved-height="@height">
                        @using (Html.BeginForm("ToggleFavorite", "Dashboard", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("widgetId", widget.Id)
                            <button type="submit" class="btn btn-link p-0 text-warning favorito-toggle" title="Agregar/Quitar favorito">
                                <i class="bi @(config != null && config.EsFavorito ? "bi-star-fill" : "bi-star") fs-5"></i>
                            </button>


                        }
                        <i class="bi bi-gear-fill config-widget-icon text-secondary position-absolute top-0 end-0 m-2"
                           data-widget-id="@widget.Id"
                           title="Configuración"
                           style="z-index: 1; cursor: pointer;"></i>


                        <div class="card-body d-flex flex-column">
                            <div class="scrollable-content">
                                <h5 class="card-title">@widget.Nombre</h5>



                                @if (ViewBag.DynamicData != null && ViewBag.DynamicData.ContainsKey(widget.Nombre))
                                {
                                    var dynamicData = ViewBag.DynamicData[widget.Nombre];

                                    if (widget.UrlApi.Contains("openweathermap.org"))
                                    {@switch (widget.ComponentId)
                                        {
                                            case 1:
                                                <div class="weather-widget mt-auto">
                                                    <div class="d-flex align-items-center mb-2">
                                                        <i class="fas fa-cloud-sun fs-3 me-2"></i>
                                                        <span class="fs-5 fw-bold">Condiciones Actuales</span>
                                                    </div>
                                                    <ul class="list-unstyled">
                                                        <li class="py-1">
                                                            <i class="fas fa-temperature-high me-2"></i>
                                                            <strong>Temperatura:</strong> @dynamicData.Temp °C
                                                        </li>
                                                        <li class="py-1">
                                                            <i class="fas fa-tint me-2"></i>
                                                            <strong>Humedad:</strong> @dynamicData.Humidity %
                                                        </li>
                                                        <li class="py-1">
                                                            <i class="fas fa-tachometer-alt me-2"></i>
                                                            <strong>Presión:</strong> @dynamicData.Pressure hPa
                                                        </li>
                                                    </ul>
                                                </div>
                                                break;

                                            case 2:
                                                <table class="table table-striped mt-auto">
                                                    <thead>
                                                        <tr>
                                                            <th>Parámetro</th>
                                                            <th>Valor</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr>
                                                            <td>🌡️ Temperatura</td>
                                                            <td>@dynamicData.Temp °C</td>
                                                        </tr>
                                                        <tr>
                                                            <td>💧 Humedad</td>
                                                            <td>@dynamicData.Humidity %</td>
                                                        </tr>
                                                        <tr>
                                                            <td>🔽 Presión</td>
                                                            <td>@dynamicData.Pressure hPa</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                break;

                                            case 3:
                                                <div class="custom-weather-widget mt-auto text-center p-3 border rounded bg-light">
                                                    <h5 class="fw-bold">🌍 Datos Climatológicos</h5>
                                                    <div class="d-flex justify-content-center">
                                                        <div class="p-2">
                                                            <i class="fas fa-temperature-high fs-3"></i>
                                                            <p><strong>Temperatura:</strong> @dynamicData.Temp °C</p>
                                                        </div>
                                                        <div class="p-2">
                                                            <i class="fas fa-tint fs-3"></i>
                                                            <p><strong>Humedad:</strong> @dynamicData.Humidity %</p>
                                                        </div>
                                                        <div class="p-2">
                                                            <i class="fas fa-tachometer-alt fs-3"></i>
                                                            <p><strong>Presión:</strong> @dynamicData.Pressure hPa</p>
                                                        </div>
                                                    </div>
                                                    <p class="text-muted">Fuente: OpenWeatherMap API</p>
                                                </div>
                                                break;

                                            default:
                                                <p class="text-warning">No hay una configuración válida para este `ComponentId`.</p>
                                                break;
                                        }
                                    }


                                    else if (widget.UrlApi.Contains("exchangerate-api.com"))
                                    {

                                        @switch (widget.ComponentId)
                                        {
                                            case 1:
                                                <div class="exchange-widget mt-auto text-center p-3 border rounded bg-light">
                                                    <h5 class="fw-bold">💰 Tasas de Cambio</h5>
                                                    <p class="text-muted small">
                                                        <i class="fas fa-sync-alt me-1"></i> Última actualización: @dynamicData.LastUpdate
                                                    </p>

                                                    <div class="d-flex justify-content-around">
                                                        @foreach (var rate in dynamicData.FeaturedRates)
                                                        {
                                                            <div class="p-2">
                                                                <i class="fas fa-coins fs-3"></i>
                                                                <p><strong>@rate.Key:</strong> @rate.Value.ToString("0.0000")</p>
                                                            </div>
                                                        }
                                                    </div>

                                                    <p class="text-muted">Fuente: ExchangeRate API</p>
                                                </div>
                                                break;

                                            case 2:
                                                <div class="exchange-table mt-auto text-center p-3 border rounded bg-light">
                                                    <h5 class="fw-bold">📊 Tasas de Cambio</h5>
                                                    <table class="table table-striped">
                                                        <thead>
                                                            <tr>
                                                                <th>Moneda</th>
                                                                <th>Valor</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var rate in dynamicData.FeaturedRates)
                                                            {
                                                                <tr>
                                                                    <td>@rate.Key</td>
                                                                    <td>@rate.Value.ToString("0.0000")</td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                    <p class="text-muted">Fuente: ExchangeRate API</p>
                                                </div>
                                                break;

                                            case 3:
                                                <div class="custom-exchange-widget mt-auto text-center p-3 border rounded bg-light">
                                                    <h5 class="fw-bold">🌍 Conversión Rápida</h5>
                                                    <p class="text-muted small">
                                                        <i class="fas fa-sync-alt me-1"></i> Última actualización: @dynamicData.LastUpdate
                                                    </p>

                                                    <div class="d-flex justify-content-around">
                                                        @foreach (var rate in dynamicData.FeaturedRates.Take(3))
                                                        {
                                                            <div class="p-2">
                                                                <i class="fas fa-hand-holding-usd fs-3"></i>
                                                                <p><strong>@rate.Key:</strong> @rate.Value.ToString("0.0000")</p>
                                                            </div>
                                                        }
                                                    </div>

                                                    <button class="btn btn-sm btn-outline-primary w-100 mt-2"
                                                            type="button"
                                                            data-bs-toggle="collapse"
                                                            data-bs-target="#allRates-@widget.Id">
                                                        <i class="fas fa-list me-1"></i> Ver Todas las Monedas
                                                    </button>

                                                    <div class="collapse mt-3" id="allRates-@widget.Id">
                                                        <div class="all-rates-container">
                                                            @foreach (var rate in dynamicData.AllRates)
                                                            {
                                                                <div class="rate-item small">
                                                                    <strong>@rate.Key:</strong> @rate.Value.ToString("0.0000")
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>

                                                    <p class="text-muted">Fuente: ExchangeRate API</p>
                                                </div>
                                                break;

                                            default:
                                                <p class="text-warning">⚠️ No hay una configuración válida para `ComponentId`.</p>
                                                break;
                                        }
                                    }
                                    else if (widget.UrlApi.Contains("api.nasa.gov"))
                                    {
                                        var nasaData = ViewBag.DynamicData[widget.Nombre];

                                        @switch (widget.ComponentId)
                                        {
                                            case 1:
                                                <div class="nasa-widget mt-auto text-center p-3 border rounded bg-light">
                                                    <p class="text-muted">📅 Fecha: @nasaData.Date</p>
                                                    <h6 class="fw-bold">@nasaData.Title</h6>

                                                    @if (nasaData.MediaType == "image")
                                                    {
                                                        <img src="@nasaData.Url" alt="Imagen APOD" class="img-fluid rounded shadow-sm" />
                                                    }
                                                    else if (nasaData.MediaType == "video")
                                                    {
                                                        <div class="ratio ratio-16x9">
                                                            <iframe src="@nasaData.Url" frameborder="0" allowfullscreen></iframe>
                                                        </div>
                                                    }

                                                    <p class="mt-3">@nasaData.Explanation</p>
                                                    <p class="text-muted small">Fuente: NASA API</p>
                                                </div>
                                                break;

                                            case 2:
                                                <div class="nasa-table mt-auto text-center p-3 border rounded bg-light">
                                                    <h5 class="fw-bold">🔭 NASA APOD</h5>
                                                    <table class="table table-striped">
                                                        <thead>
                                                            <tr>
                                                                <th>Fecha</th>
                                                                <th>Título</th>
                                                                <th>Tipo</th>
                                                                <th>Fuente</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <td>@nasaData.Date</td>
                                                                <td>@nasaData.Title</td>
                                                                <td>@nasaData.MediaType</td>
                                                                <td><a href="@nasaData.Url" target="_blank">Ver contenido</a></td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                                break;

                                            case 3:
                                                <div class="custom-nasa-widget mt-auto text-center p-3 border rounded bg-light">
                                                    <h5 class="fw-bold">✨ Exploración Espacial</h5>
                                                    <p class="text-muted small">Última actualización: @nasaData.Date</p>

                                                    <div class="d-flex justify-content-center">
                                                        <div class="p-2">
                                                            <i class="fas fa-rocket fs-3"></i>
                                                            <p><strong>Misión:</strong> @nasaData.Title</p>
                                                        </div>
                                                        <div class="p-2">
                                                            <i class="fas fa-globe fs-3"></i>
                                                            <p><strong>Tipo:</strong> @nasaData.MediaType</p>
                                                        </div>
                                                    </div>

                                                    @if (nasaData.MediaType == "image")
                                                    {
                                                        <img src="@nasaData.Url" alt="Imagen NASA" class="img-fluid rounded shadow-sm mt-3" />
                                                    }
                                                    else if (nasaData.MediaType == "video")
                                                    {
                                                        <div class="ratio ratio-16x9 mt-3">
                                                            <iframe src="@nasaData.Url" frameborder="0" allowfullscreen></iframe>
                                                        </div>
                                                    }

                                                    <button class="btn btn-sm btn-outline-primary w-100 mt-2"
                                                            type="button"
                                                            data-bs-toggle="collapse"
                                                            data-bs-target="#nasaDetails-@widget.Id">
                                                        <i class="fas fa-info-circle me-1"></i> Ver más detalles
                                                    </button>

                                                    <div class="collapse mt-3" id="nasaDetails-@widget.Id">
                                                        <p>@nasaData.Explanation</p>
                                                    </div>

                                                    <p class="text-muted small mt-2">Fuente: NASA API</p>
                                                </div>
                                                break;

                                            default:
                                                <p class="text-warning">⚠️ No hay una configuración válida para `ComponentId`.</p>
                                                break;
                                        }
                                    }

                                    else if (widget.UrlApi.Contains("rickandmortyapi"))
                                    {
                                        var rickData = ViewBag.DynamicData[widget.Nombre] as List<MDashboard.Models.ApiModels.Character>;

                                        @switch (widget.ComponentId)
                                        {
                                            case 1:
                                                <div class="rick-widget mt-auto text-center p-3 border rounded bg-light">
                                                    <h5 class="fw-bold">🌀 Personajes de Rick and Morty</h5>
                                                    <div class="rick-carousel">
                                                        <button class="rick-nav-button rick-prev">⬅️</button>
                                                        <button class="rick-nav-button rick-next">➡️</button>
                                                        <div class="rick-slider">
                                                            @foreach (var character in rickData)
                                                            {
                                                                <div class="rick-card">
                                                                    <img src="@character.Image" alt="@character.Name" class="img-fluid rounded shadow-sm" />
                                                                    <div class="rick-card-body">
                                                                        <h6 class="mb-2">@character.Name</h6>
                                                                        <p class="text-muted">@character.Status | @character.Species | @character.Gender</p>
                                                                    </div>
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>
                                                    <div class="rick-indicators"></div>
                                                </div>
                                                break;

                                            case 2:
                                                <div class="rick-table mt-auto text-center p-3 border rounded bg-light">
                                                    <h5 class="fw-bold">📋 Lista de Personajes</h5>
                                                    <table class="table table-striped">
                                                        <thead>
                                                            <tr>
                                                                <th>Imagen</th>
                                                                <th>Nombre</th>
                                                                <th>Especie</th>
                                                                <th>Género</th>
                                                                <th>Estado</th>
                                                                <th>Origen</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var character in rickData)
                                                            {
                                                                <tr>
                                                                    <td><img src="@character.Image" alt="@character.Name" class="img-thumbnail" width="50"></td>
                                                                    <td>@character.Name</td>
                                                                    <td>@character.Species</td>
                                                                    <td>@character.Gender</td>
                                                                    <td>@character.Status</td>
                                                                    <td>@character.Origin?.Name</td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                                break;

                                            case 3:
                                                <div class="custom-rick-widget mt-auto text-center p-3 border rounded bg-light">
                                                    <h5 class="fw-bold">💥 Dimensiones Alternativas</h5>
                                                    <div class="d-flex flex-wrap justify-content-center">
                                                        @foreach (var character in rickData.Take(6))
                                                        {
                                                            <div class="p-2 m-1 border rounded shadow-sm bg-dark text-white">
                                                                <img src="@character.Image" alt="@character.Name" class="img-fluid rounded mb-2" width="100" />
                                                                <p><strong>@character.Name</strong></p>
                                                                <p class="small">@character.Species | @character.Gender</p>
                                                            </div>
                                                        }
                                                    </div>

                                                    <button class="btn btn-sm btn-outline-light w-100 mt-2"
                                                            type="button"
                                                            data-bs-toggle="collapse"
                                                            data-bs-target="#rickDetails-@widget.Id">
                                                        <i class="fas fa-info-circle me-1"></i> Ver más personajes
                                                    </button>

                                                    <div class="collapse mt-3" id="rickDetails-@widget.Id">
                                                        <div class="d-flex flex-wrap justify-content-center">
                                                            @foreach (var character in rickData.Skip(6))
                                                            {
                                                                <div class="p-2 m-1 border rounded shadow-sm bg-dark text-white">
                                                                    <img src="@character.Image" alt="@character.Name" class="img-fluid rounded mb-2" width="100" />
                                                                    <p><strong>@character.Name</strong></p>
                                                                    <p class="small">@character.Species | @character.Gender</p>
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>

                                                    <p class="text-muted small mt-2">Fuente: Rick and Morty API</p>
                                                </div>
                                                break;

                                            default:
                                                <p class="text-warning">⚠️ No hay una configuración válida para `ComponentId`.</p>
                                                break;
                                        }
                                    }
                                    else if (widget.UrlApi.Contains("meowfacts"))
                                    {
                                        var meowData = ViewBag.DynamicData[widget.Nombre] as MDashboard.Models.ApiModels.MeowFactsAPIResponse;

                                        @switch (widget.ComponentId)
                                        {
                                            case 1:
                                                <div class="meow-widget mt-auto p-3 border rounded bg-light">
                                                    <div class="d-flex align-items-center mb-3">
                                                        <i class="fas fa-paw fs-4 me-2 text-primary"></i>
                                                        <h5 class="mb-0">Meow Fact</h5>
                                                    </div>
                                                    <p class="mb-0">@meowData.Data?.FirstOrDefault()</p>
                                                </div>
                                                break;

                                            case 2:
                                                <div class="meow-widget mt-auto p-3 rounded text-white" style="background: #8A4F7D;">
                                                    <div class="d-flex align-items-center mb-3">
                                                        <img src="~/img/cat-silhouette.png" width="40" class="me-2">
                                                        <h5 class="mb-0">🐾 Did you know...</h5>
                                                    </div>
                                                    <div class="alert alert-light">
                                                        @meowData.Data?.FirstOrDefault()
                                                    </div>
                                                </div>
                                                break;

                                            case 3:
                                                <div class="meow-widget mt-auto p-3 border rounded bg-light">
                                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                                        <h5 class="mb-0">
                                                            <i class="fas fa-cat text-warning"></i> Curiosidad felina
                                                        </h5>
                                                        <button class="btn btn-sm btn-outline-secondary"
                                                                onclick="navigator.clipboard.writeText('@meowData.Data?.FirstOrDefault()')">
                                                            <i class="fas fa-copy"></i>
                                                        </button>
                                                    </div>
                                                    <p class="fst-italic">"@meowData.Data?.FirstOrDefault()"</p>
                                                </div>
                                                break;

                                            default:
                                                <div class="alert alert-warning">
                                                    ComponentId no configurado para MeowFacts
                                                </div>
                                                break;
                                        }
                                    }
                                    else if (widget.UrlApi.Contains("dog.ceo"))
                                    {
                                        var dogData = ViewBag.DynamicData[widget.Nombre] as MDashboard.Models.ApiModels.DogApiResponse;

                                        @switch (widget.ComponentId)
                                        {
                                            case 1:
                                                <div class="dog-widget mt-auto text-center p-3">
                                                    <h5 class="mb-3">🐶 Foto aleatoria de perro</h5>
                                                    <img src="@dogData.Message" alt="Foto de perro" class="img-fluid rounded shadow" style="max-height: 200px;">
                                                    <p class="text-muted mt-2 mb-0">Estado: @dogData.Status</p>
                                                </div>
                                                break;

                                            case 2:
                                                <div class="dog-widget mt-auto text-center p-3 border rounded" style="background-color: #f8f9fa;">
                                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                                        <h5 class="mb-0">🐕‍🦺 Amigo canino</h5>
                                                        <span class="badge bg-success">@dogData.Status</span>
                                                    </div>
                                                    <div class="dog-image-container mb-3">
                                                        <img src="@dogData.Message" alt="Foto de perro" class="img-fluid rounded" style="max-height: 180px;">
                                                    </div>
                                                    <button class="btn btn-sm btn-outline-primary w-100"
                                                            onclick="window.open('@dogData.Message', '_blank')">
                                                        <i class="fas fa-expand me-1"></i> Ver en tamaño completo
                                                    </button>
                                                </div>
                                                break;

                                            case 3:
                                                <div class="dog-widget mt-auto text-center p-3 border rounded bg-white shadow-sm">
                                                    <div class="dog-header mb-3">
                                                        <i class="fas fa-dog fa-2x text-warning"></i>
                                                        <h5 class="mt-2">¡Nueva foto!</h5>
                                                    </div>
                                                    <div class="dog-image-hover">
                                                        <img src="@dogData.Message" alt="Foto de perro" class="img-fluid rounded-circle" style="width: 180px; height: 180px; object-fit: cover;">
                                                    </div>
                                                    <div class="mt-3">
                                                        <button class="btn btn-sm btn-primary me-2" onclick="actualizarWidget(@widget.Id)">
                                                            <i class="fas fa-sync-alt me-1"></i> Otra foto
                                                        </button>
                                                        <button class="btn btn-sm btn-success" onclick="descargarImagen('@dogData.Message', 'perro')">
                                                            <i class="fas fa-download me-1"></i> Descargar
                                                        </button>
                                                    </div>
                                                </div>
                                                break;

                                            default:
                                                <div class="alert alert-warning">
                                                    ComponentId no configurado para Dog API
                                                </div>
                                                break;
                                        }
                                    }
                                    else if (widget.UrlApi.Contains("logotypes.dev"))
                                    {
                                        var logoData = ViewBag.DynamicData[widget.Nombre] as MDashboard.Models.ApiModels.LogotypesApiResponse;

                                        if (logoData == null)
                                        {
                                            <div class="alert alert-warning mt-auto">
                                                <i class="fas fa-exclamation-triangle me-2"></i>
                                                No se pudieron cargar los datos del logo.
                                            </div>
                                        }
                                        else
                                        {
                                            @switch (widget.ComponentId)
                                            {
                                                case 1:
                                                    <div class="logo-widget mt-auto p-3 border rounded text-center">
                                                        <img src="@logoData.Logo" alt="@logoData.Name logo" class="img-fluid mb-3" style="max-height: 80px;">
                                                        <h5>@logoData.Name</h5>
                                                        <p class="small text-muted mb-2">@logoData.Example_title</p>
                                                        <div class="badge bg-light text-dark">@logoData.Variant (@logoData.Version)</div>
                                                    </div>
                                                    break;

                                                case 2:
                                                    <div class="logo-widget mt-auto p-3 border rounded bg-light">
                                                        <div class="d-flex align-items-center mb-3">
                                                            <img src="@logoData.Logo" alt="@logoData.Name logo" class="img-fluid me-3" style="max-height: 60px;">
                                                            <div>
                                                                <h5 class="mb-1">@logoData.Name</h5>
                                                                <span class="badge bg-secondary">@logoData.Variant</span>
                                                                <span class="badge bg-info ms-1">@logoData.Version</span>
                                                            </div>
                                                        </div>
                                                        <div class="card bg-white p-3">
                                                            <h6 class="text-primary">@logoData.Example_title</h6>
                                                            <p class="small mb-0">@logoData.Example_description</p>
                                                        </div>
                                                    </div>
                                                    break;

                                                case 3:
                                                    <div class="logo-widget mt-auto p-4 border rounded text-center position-relative overflow-hidden"
                                                         style="background: linear-gradient(135deg, #f5f7fa 0%, #e4e8eb 100%);">
                                                        <div class="logo-hover-effect" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"></div>
                                                        <img src="@logoData.Logo" alt="@logoData.Name logo"
                                                             class="img-fluid mb-3 transition-all"
                                                             style="max-height: 100px; filter: drop-shadow(0 4px 6px rgba(0,0,0,0.1));">

                                                        <h4 class="position-relative">@logoData.Name</h4>
                                                        <p class="position-relative">@logoData.Example_title</p>

                                                        <div class="position-relative mt-3">
                                                            <button class="btn btn-sm btn-outline-primary"
                                                                    onclick="window.open('@logoData.Logo', '_blank')">
                                                                <i class="fas fa-expand me-1"></i> Ver logo completo
                                                            </button>
                                                        </div>

                                                        <div class="logo-details position-absolute bottom-0 start-0 w-100 p-2 bg-dark text-white text-center small opacity-0 transition-all">
                                                            Variant: @logoData.Variant | Version: @logoData.Version
                                                        </div>
                                                    </div>
                                                    break;

                                                default:
                                                    <div class="alert alert-warning">
                                                        ComponentId no configurado para Logotypes API
                                                    </div>
                                                    break;
                                            }
                                        }
                                    }
                                    else if (widget.UrlApi.Contains("api.chucknorris.io"))
                                    {
                                        var ChuckData = ViewBag.DynamicData[widget.Nombre] as MDashboard.Models.ApiModels.ChuckNorrisApiResponse;
                                        @switch (widget.ComponentId)
                                        {
                                            case 1:
                                                <div class="chuck-norris-widget mt-auto text-center p-3 border rounded bg-light">
                                                    <h5 class="fw-bold">Chuck Norris Dice:</h5>
                                                    <p class="fs-4">@ChuckData.Value</p>
                                                    <img src="@ChuckData.IconUrl" alt="Icono Chuck Norris" class="img-fluid">
                                                    <p class="text-muted small">ID de la Frase: @ChuckData.Id</p>
                                                    <p class="text-muted">Fuente: Chuck Norris API</p>
                                                </div>
                                                break;

                                            case 2:
                                                <div class="chuck-norris-table mt-auto text-center p-3 border rounded bg-light">
                                                    <h5 class="fw-bold">Chuck Norris Frase</h5>
                                                    <table class="table table-striped">
                                                        <thead>
                                                            <tr>
                                                                <th>Información</th>
                                                                <th>Valor</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <td>Frase</td>
                                                                <td>@ChuckData.Value</td>
                                                            </tr>
                                                            <tr>
                                                                <td>ID de la Frase</td>
                                                                <td>@ChuckData.Id</td>
                                                            </tr>
                                                            <tr>
                                                                <td>Icono</td>
                                                                <td><img src="@ChuckData.IconUrl" alt="Chuck Norris Icon" class="img-fluid" style="max-width: 50px;"></td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                    <p class="text-muted">Fuente: Chuck Norris API</p>
                                                </div>
                                                break;

                                            case 3:
                                                <div class="custom-chuck-widget mt-auto text-center p-3 border rounded bg-light">
                                                    <h5 class="fw-bold">💥 Chuck Norris</h5>
                                                    <p class="fs-5">"@ChuckData.Value"</p>
                                                    <img src="@ChuckData.IconUrl" alt="Icono Chuck Norris" class="img-fluid" style="max-width: 100px;">
                                                    <p class="text-muted small">Frase Generada: @ChuckData.Id</p>
                                                    <p class="text-muted">Fuente: Chuck Norris API</p>
                                                </div>
                                                break;

                                            default:
                                                <p class="text-warning">⚠️ No hay una configuración válida para `ComponentId` en el Widget de Chuck Norris.</p>
                                                break;
                                        }
                                    }
                                    else if (widget.UrlApi.Contains("jokeapi.dev"))
                                    {
                                        var jokeData = ViewBag.DynamicData[widget.Nombre] as MDashboard.Models.ApiModels.JokeModel;
                                        if (jokeData != null)
                                        {
                                            @switch (widget.ComponentId)
                                            {
                                                case 1:
                                                    <div class="joke-widget mt-auto text-center p-3 border rounded bg-light">
                                                        <h5 class="fw-bold">😂 Chiste del Día</h5>
                                                        <p><strong>@jokeData.Categoria</strong></p>
                                                        <p>@jokeData.Chiste</p>
                                                        <p class="text-muted">Fuente: Joke API</p>
                                                    </div>
                                                    break;

                                                case 2:
                                                    <table class="table table-striped mt-auto">
                                                        <thead>
                                                            <tr>
                                                                <th>Parámetro</th>
                                                                <th>Valor</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <td>Categoria</td>
                                                                <td>@jokeData.Categoria</td>
                                                            </tr>
                                                            <tr>
                                                                <td>Chiste</td>
                                                                <td>@jokeData.Chiste</td>
                                                            </tr>
                                                            <tr>
                                                                <td>Tipo</td>
                                                                <td>@jokeData.Tipo</td>
                                                            </tr>
                                                            <tr>
                                                                <td>Idioma</td>
                                                                <td>@jokeData.Idioma</td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                    break;

                                                case 3:
                                                    <div class="custom-joke-widget mt-auto text-center p-3 border rounded bg-light">
                                                        <h5 class="fw-bold">🎭 ¿Listo para reír?</h5>
                                                        <p><strong>@jokeData.Categoria</strong></p>
                                                        <p>@jokeData.Chiste</p>
                                                        @if (jokeData.Tipo == "twopart")
                                                        {
                                                            <p><strong>Setup:</strong> @jokeData.Setup</p>
                                                            <p><strong>Delivery:</strong> @jokeData.Delivery</p>
                                                        }
                                                        <p class="text-muted">Idioma: @jokeData.Idioma</p>
                                                    </div>
                                                    break;

                                                default:
                                                    <p class="text-warning">No hay una configuración válida para este <code>ComponentId</code>.</p>
                                                    break;
                                            }
                                        }
                                        else
                                        {
                                            <p class="text-danger">No hay datos dinámicos para el widget @widget.Nombre.</p>
                                        }
                                    }

                                    else if (widget.UrlApi.ToLower().Contains("quote"))
                                    {
                                        <div class="col">
                                            <div class="card h-100 shadow-sm">
                                                <div class="card-body">
                                                    <h5 class="card-title">@widget.Nombre</h5>
                                                    @if (ViewBag.DynamicData != null && ViewBag.DynamicData.ContainsKey(widget.Nombre))
                                                    {
                                                        var quoteData = ViewBag.DynamicData[widget.Nombre] as MDashboard.Models.ApiModels.QuoteModel;
                                                        if (quoteData != null)
                                                        {
                                                            @switch (widget.ComponentId)
                                                            {
                                                                case 1:
                                                                    <div class="quote-widget text-center">
                                                                        <p class="fs-5">"@quoteData.Quote"</p>
                                                                        <p class="fw-bold">- @quoteData.Author</p>
                                                                        <p class="text-muted small">ID: @quoteData.Id</p>
                                                                    </div>
                                                                    break;
                                                                case 2:
                                                                    <table class="table table-striped">
                                                                        <thead>
                                                                            <tr>
                                                                                <th>Parámetro</th>
                                                                                <th>Valor</th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                            <tr>
                                                                                <td>Frase</td>
                                                                                <td>@quoteData.Quote</td>
                                                                            </tr>
                                                                            <tr>
                                                                                <td>Autor</td>
                                                                                <td>@quoteData.Author</td>
                                                                            </tr>
                                                                            <tr>
                                                                                <td>ID</td>
                                                                                <td>@quoteData.Id</td>
                                                                            </tr>
                                                                        </tbody>
                                                                    </table>
                                                                    break;
                                                                case 3:
                                                                    <div class="custom-quote-widget text-center p-3 border rounded bg-light">
                                                                        <h5 class="fw-bold">Quote del Día</h5>
                                                                        <blockquote class="blockquote">
                                                                            <p class="mb-0">"@quoteData.Quote"</p>
                                                                            <footer class="blockquote-footer">@quoteData.Author</footer>
                                                                        </blockquote>
                                                                        <p class="text-muted small">ID: @quoteData.Id</p>
                                                                    </div>
                                                                    break;
                                                                default:
                                                                    <p class="text-warning">No hay una configuración válida para este <code>ComponentId</code>.</p>
                                                                    break;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <p class="text-danger">Datos dinámicos para este widget (@widget.Nombre) no disponibles.</p>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <p class="text-danger">No hay datos dinámicos para este widget (@widget.Nombre).</p>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }

                                    else if (widget.UrlApi.ToLower().Contains("advice"))
                                    {
                                        <div class="col">
                                            <div class="card h-100 shadow-sm">
                                                <div class="card-body text-center">
                                                    <h5 class="card-title">@widget.Nombre</h5>
                                                    @if (ViewBag.DynamicData != null && ViewBag.DynamicData.ContainsKey(widget.Nombre))
                                                    {
                                                        var adviceData = ViewBag.DynamicData[widget.Nombre] as MDashboard.Models.ApiModels.AdviceSlipResponse;
                                                        if (adviceData != null && adviceData.Slip != null)
                                                        {
                                                            @switch (widget.ComponentId)
                                                            {
                                                                case 1:
                                                                    <div class="advice-widget text-center">
                                                                        <p class="fs-5">"@adviceData.Slip.Advice"</p>
                                                                        <p class="text-muted small">ID: @adviceData.Slip.Id</p>
                                                                    </div>
                                                                    break;
                                                                case 2:
                                                                    <table class="table table-striped">
                                                                        <thead>
                                                                            <tr>
                                                                                <th>Parámetro</th>
                                                                                <th>Valor</th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                            <tr>
                                                                                <td>Consejo</td>
                                                                                <td>@adviceData.Slip.Advice</td>
                                                                            </tr>
                                                                            <tr>
                                                                                <td>ID</td>
                                                                                <td>@adviceData.Slip.Id</td>
                                                                            </tr>
                                                                        </tbody>
                                                                    </table>
                                                                    break;
                                                                case 3:
                                                                    <div class="custom-advice-widget text-center p-3 border rounded bg-light">
                                                                        <h5 class="fw-bold">Consejo del Día</h5>
                                                                        <blockquote class="blockquote">
                                                                            <p class="mb-0">"@adviceData.Slip.Advice"</p>
                                                                        </blockquote>
                                                                        <p class="text-muted small">ID: @adviceData.Slip.Id</p>
                                                                    </div>
                                                                    break;
                                                                default:
                                                                    <p class="text-warning">No hay una configuración válida para este <code>ComponentId</code>.</p>
                                                                    break;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <p class="text-danger">Datos de Advice Slip no disponibles.</p>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <p class="text-danger">No hay datos dinámicos para este widget (@widget.Nombre).</p>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }

                                    else
                                    {
                                        <div class="generic-widget mt-auto">
                                            <pre class="p-2 bg-light rounded">@JsonConvert.SerializeObject(dynamicData, Formatting.Indented)</pre>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="alert alert-warning mt-auto">
                                        <i class="fas fa-exclamation-triangle me-2"></i>
                                        No hay datos disponibles
                                    </div>
                                }
                            </div>

                            <div class="sticky-button-container mt-3">
                                <div class="d-flex gap-3">
                                    <button class="neu-button w-100" onclick="mostrarModalDimensiones(@widget.Id)">
                                        <i class="fas fa-cog me-1"></i> Size
                                    </button>

                                    <button class="neu-button w-100" onclick="ocultarWidget(@widget.Id)">
                                        <i class="fas fa-eye-slash me-1"></i> Hide
                                    </button>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="modal fade" id="configModal" tabindex="-1" aria-labelledby="configModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content dark-theme">
                <div class="modal-header">
                    <h5 class="modal-title" id="configModalLabel">Configuración del Widget</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body" id="configModalBody">
                </div>
            </div>
        </div>
    </div>

    <div class="mb-4">
        <button class="btn btn-outline-secondary mb-3" type="button" data-bs-toggle="collapse" data-bs-target="#widgetsOcultosContainer">
            <i class="fas fa-eye me-1"></i> Mostrar Widgets Ocultos (<span id="contadorOcultos">@(ViewBag.WidgetsOcultos?.Count ?? 0)</span>)
        </button>

        <div class="collapse" id="widgetsOcultosContainer">
            <div class="card card-body dark-theme">
                <h4 class="mb-3">Widgets Ocultos</h4>
                <div class="row row-cols-1 row-cols-md-3 g-4" id="widgetsOcultos">
                    @if (ViewBag.WidgetsOcultos != null)
                    {
                        foreach (var widget in ViewBag.WidgetsOcultos)
                        {
                            <div class="col mb-4 widget-item" data-widget-id="@widget.Id" id="widget-oculto-@widget.Id">
                                <div class="card h-100 shadow-sm opacity-75">
                                    <div class="card-body d-flex flex-column">
                                        <h5 class="card-title">@widget.Nombre</h5>
                                        <p class="card-text">@widget.Descripcion</p>

                                        <div class="sticky-button-container mt-auto">
                                            <button class="btn btn-success btn-sm w-100" onclick="mostrarWidget(@widget.Id)">
                                                <i class="fas fa-eye me-1"></i> Mostrar Widget
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="dimensionesModal" tabindex="-1" aria-labelledby="dimensionesModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content dark-theme">
            <div class="modal-header">
                <h5 class="modal-title" id="dimensionesModalLabel">Configurar dimensiones</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="dimensiones-widget-id">
                <div class="mb-3">
                    <label for="widget-width" class="form-label">Ancho (px)</label>
                    <input type="range" class="form-range" id="widget-width-range" min="300" max="1200" step="50" value="400">
                    <input type="number" class="form-control mt-2" id="widget-width" min="300" max="1200" value="400">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="guardar-dimensiones">Guardar</button>
            </div>
        </div>
    </div>
</div>





@section Scripts {
    <script>
        $(document).ready(function() {
            // Sincronización entre inputs range y number
            $('#widget-width-range').on('input', function() {
                $('#widget-width').val($(this).val());
            });

            $('#widget-width').on('input', function() {
                $('#widget-width-range').val($(this).val());
            });

            $('#widget-height-range').on('input', function() {
                $('#widget-height').val($(this).val());
            });

            $('#widget-height').on('input', function() {
                $('#widget-height-range').val($(this).val());
            });

            // Inicialización de componentes
            inicializarRickCarousels();
            actualizarContadorWidgetsOcultos();

            // Manejo del modal de dimensiones
            $('.config-widget-icon').on('click', function(e) {
                e.preventDefault();
                const widgetId = $(this).data('widget-id');
                mostrarModalDimensiones(widgetId);
            });

            // Guardar dimensiones
            $('#guardar-dimensiones').on('click', function() {
                guardarDimensionesWidget();
            });

            // Validación de inputs
            $('#widget-width, #widget-height').on('input', function() {
                validarDimensionesInput(this);
            });
        });

        function mostrarModalDimensiones(widgetId) {
            const widgetElement = $('#widget-' + widgetId);
            const card = widgetElement.find('.card');

            // Obtener dimensiones actuales desde los data attributes
            const savedWidth = card.data('saved-width') || 400;
            const savedHeight = card.data('saved-height') || 400;

            $('#dimensiones-widget-id').val(widgetId);
            $('#widget-width').val(savedWidth);
            $('#widget-height').val(savedHeight);
            $('#widget-width-range').val(savedWidth);
            $('#widget-height-range').val(savedHeight);

            $('#dimensionesModal').modal('show');
        }

        function guardarDimensionesWidget() {
            const widgetId = $('#dimensiones-widget-id').val();
            const width = parseInt($('#widget-width').val());
            const height = parseInt($('#widget-height').val());

            // Validación de dimensiones (ahora mínimo 300px)
            if (width < 300 || width > 1200 || height < 300 || height > 800) {
                mostrarNotificacion('Las dimensiones deben estar entre 300-1200px (ancho) y 300-800px (alto)', 'error');
                return;
            }

            $.ajax({
                url: '@Url.Action("ActualizarDimensionesWidget", "Dashboard")',
                type: 'POST',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                data: {
                    widgetId: widgetId,
                    width: width,
                    height: height
                },
                success: function(response) {
                    if (response.success) {
                        const widgetElement = $('#widget-' + widgetId);
                        const card = widgetElement.find('.card');

                        // Aplicar las nuevas dimensiones sin cambiar la posición
                        card.css({
                            'width': response.width + 'px',
                            'height': response.height + 'px',
                            'flex': '0 0 auto', // Esto evita que flexbox intente ajustar el tamaño
                            'transition': 'all 0.3s ease' // Transición suave
                        });

                        // Actualizar los data attributes
                        card.data('saved-width', response.width);
                        card.data('saved-height', response.height);

                        $('#dimensionesModal').modal('hide');
                        mostrarNotificacion('Dimensiones actualizadas correctamente');
                    } else {
                        mostrarNotificacion(response.error || 'Error al actualizar dimensiones', 'error');
                    }
                },
                error: function(xhr) {
                    mostrarNotificacion('Error de conexión: ' + xhr.responseText, 'error');
                }
            });
        }

        function validarDimensionesInput(inputElement) {
            const value = parseInt($(inputElement).val());
            const min = 300; // Nuevo mínimo
            const max = $(inputElement).attr('max') || 1200;

            if (isNaN(value) || value < min || value > max) {
                $(inputElement).addClass('is-invalid');
                return false;
            } else {
                $(inputElement).removeClass('is-invalid');
                return true;
            }
        }

        function inicializarRickCarousels() {
            $('.rick-carousel').each(function () {
                const carousel = $(this);
                const slider = carousel.find('.rick-slider');
                const cards = slider.children();
                const indicatorsContainer = carousel.find('.rick-indicators');

                indicatorsContainer.empty();

                let currentIndex = 0;

                cards.each((index) => {
                    indicatorsContainer.append(`<div class="rick-indicator ${index === 0 ? 'active' : ''}"></div>`);
                });

                const updateIndicators = () => {
                    indicatorsContainer.find('.rick-indicator').removeClass('active')
                        .eq(currentIndex).addClass('active');
                };

                carousel.find('.rick-prev').off('click').on('click', () => {
                    if (currentIndex > 0) {
                        currentIndex--;
                        slider.css('transform', `translateX(-${currentIndex * 100}%)`);
                        updateIndicators();
                    }
                });

                carousel.find('.rick-next').off('click').on('click', () => {
                    if (currentIndex < cards.length - 1) {
                        currentIndex++;
                        slider.css('transform', `translateX(-${currentIndex * 100}%)`);
                        updateIndicators();
                    }
                });

                indicatorsContainer.off('click', '.rick-indicator').on('click', '.rick-indicator', function () {
                    currentIndex = $(this).index();
                    slider.css('transform', `translateX(-${currentIndex * 100}%)`);
                    updateIndicators();
                });
            });
        }

        function actualizarContadorWidgetsOcultos() {
            const widgetsOcultosCount = $('#widgetsOcultos .widget-item').length;
            $('#contadorOcultos').text(widgetsOcultosCount);

            if (widgetsOcultosCount === 0) {
                $('[data-bs-target="#widgetsOcultosContainer"]').hide();
            }
        }

        function ocultarWidget(widgetId) {
            $.ajax({
                url: '@Url.Action("ActualizarVisibilidadWidget", "Dashboard")',
                type: 'POST',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                data: { widgetId: widgetId, esVisible: false },
                success: function (response) {
                    if (response.success) {
                        const widgetElement = $('#widget-' + widgetId);
                        const widgetClone = widgetElement.clone();

                        widgetClone.find('.scrollable-content').html(`
                            <h5 class="card-title">${widgetClone.find('.card-title').text()}</h5>
                            <p class="card-text">${widgetClone.find('.card-text').text() || 'Widget oculto'}</p>
                        `);

                        widgetClone.attr('id', 'widget-oculto-' + widgetId);
                        widgetClone.find('.sticky-button-container').html(`
                            <button class="btn btn-success btn-sm w-100" onclick="mostrarWidget(${widgetId})">
                                <i class="fas fa-eye me-1"></i> Mostrar Widget
                            </button>
                        `);

                        widgetElement.fadeOut(400, function () {
                            $(this).remove();

                            $('#widgetsOcultosContainer').addClass('show');
                            $('#widgetsOcultos').append(widgetClone);
                            widgetClone.hide().fadeIn();
                            actualizarContadorWidgetsOcultos();
                        });
                    } else {
                        mostrarNotificacion('Error al ocultar el widget', 'error');
                    }
                },
                error: function () {
                    mostrarNotificacion('Error al conectar con el servidor', 'error');
                }
            });
        }

        function mostrarWidget(widgetId) {
            $.ajax({
                url: '@Url.Action("MostrarWidget", "Dashboard")',
                type: 'POST',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                data: { widgetId: widgetId },
                success: function (response) {
                    if (response.success) {
                        const widgetOculto = $('#widget-oculto-' + widgetId);
                        widgetOculto.fadeOut(400, function () {
                            $(this).remove();
                            actualizarContadorWidgetsOcultos();
                            location.reload();
                        });
                    } else {
                        mostrarNotificacion('Error al mostrar el widget', 'error');
                    }
                },
                error: function () {
                    mostrarNotificacion('Error al conectar con el servidor', 'error');
                }
            });
        }

        function actualizarWidgets() {
            $.ajax({
                url: '@Url.Action("Index", "Dashboard")',
                type: 'GET',
                data: { partial: true },
                success: function(response) {
                    const tempDiv = $('<div>').html(response.html);
                    const newWidgets = tempDiv.find('#widgetsContainer').html();

                    const $container = $('#widgetsContainer');
                    $container.addClass('fade-scale-out');

                    setTimeout(() => {
                        $container.html(newWidgets);
                        $container.removeClass('fade-scale-out').addClass('fade-scale-in');

                        setTimeout(() => {
                            $container.removeClass('fade-scale-in');
                            inicializarRickCarousels();
                            actualizarContadorWidgetsOcultos();
                        }, 300);
                    }, 300);
                },
                error: function() {
                    console.error("Error al actualizar los widgets");
                }
            });
        }

        function mostrarNotificacion(mensaje, tipo = 'success') {
            // Implementación básica con alert (puedes reemplazar con Toastr)
            alert(mensaje);
        }

        setInterval(actualizarWidgets, 30000);
    </script>
    <script src="~/js/widget-config.js"></script>
}